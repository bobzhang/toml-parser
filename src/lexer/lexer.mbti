// Generated using `moon info`, DON'T EDIT IT
package "bob/toml/lexer"

// Values

// Errors

// Types and methods
pub(all) struct Lexer {
  input : String
  mut position : Int
  mut line : Int
  mut column : Int
}
fn Lexer::advance(Self) -> Unit
fn Lexer::advance_until_charcode(Self, Int) -> Unit
fn Lexer::check_is_charcode(Self, Int) -> Bool
fn Lexer::check_not_charcode(Self, Int) -> Bool
fn Lexer::error(Self, String) -> String
fn Lexer::expect_char(Self, Char, msg? : String) -> Unit raise
fn Lexer::expect_string(Self, String, msg? : String) -> Unit raise
fn Lexer::get_column(Self) -> Int
fn Lexer::get_line(Self) -> Int
fn Lexer::get_position(Self) -> Int
fn Lexer::new(String) -> Self
fn Lexer::new_line(Self) -> Unit
fn Lexer::peek(Self) -> Char?
fn Lexer::peek_charcode(Self) -> Int?
fn Lexer::repeat_if(Self, (Char) -> Bool) -> Unit
fn Lexer::skip_comment(Self) -> Unit
fn Lexer::skip_whitespace(Self) -> Unit
fn Lexer::try_consume_charcode(Self, Int) -> Bool

// Type aliases

// Traits

